/* Drop existing table if it exists */
DROP TABLE IF EXISTS configuracoes;

/* Create configuracoes table */
CREATE TABLE configuracoes (
    id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    cnpj varchar(18),
    razao_social varchar(255),
    nome_fantasia varchar(255),
    endereco text,
    telefone varchar(20),
    validade_orcamento integer DEFAULT 30,
    formula_m2 text DEFAULT 'largura * altura',
    formula_comprimento text DEFAULT 'largura',
    formula_bando text DEFAULT 'largura * 0.3',
    formula_instalacao text DEFAULT 'quantidade * 50',
    company_logo text,
    created_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL,
    updated_at timestamp with time zone DEFAULT timezone('utc'::text, now()) NOT NULL
);

/* Create updated_at trigger */
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = timezone('utc'::text, now());
    RETURN NEW;
END;
$$ language 'plpgsql';

DROP TRIGGER IF EXISTS update_configuracoes_updated_at ON configuracoes;
CREATE TRIGGER update_configuracoes_updated_at
    BEFORE UPDATE ON configuracoes
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

/* Enable RLS */
ALTER TABLE configuracoes ENABLE ROW LEVEL SECURITY;

/* Drop existing policies */
DROP POLICY IF EXISTS "Enable read access for all users" ON configuracoes;
DROP POLICY IF EXISTS "Enable insert for authenticated users only" ON configuracoes;
DROP POLICY IF EXISTS "Enable update for authenticated users only" ON configuracoes;
DROP POLICY IF EXISTS "Enable delete for authenticated users only" ON configuracoes;
DROP POLICY IF EXISTS "Public Access" ON configuracoes;

/* Create public access policy */
CREATE POLICY "Public Access"
ON configuracoes
FOR ALL
TO public
USING (true)
WITH CHECK (true);

/* Insert default configuration if not exists */
INSERT INTO configuracoes (
    cnpj,
    razao_social,
    nome_fantasia,
    endereco,
    telefone,
    validade_orcamento,
    formula_m2,
    formula_comprimento,
    formula_bando,
    formula_instalacao
)
SELECT
    '',                  /* cnpj */
    '',                  /* razao_social */
    '',                  /* nome_fantasia */
    '',                  /* endereco */
    '',                  /* telefone */
    30,                  /* validade_orcamento */
    'largura * altura',  /* formula_m2 */
    'largura',          /* formula_comprimento */
    'largura * 0.3',    /* formula_bando */
    'quantidade * 50'    /* formula_instalacao */
WHERE NOT EXISTS (
    SELECT 1 FROM configuracoes
);

/* Grant permissions */
GRANT ALL ON configuracoes TO authenticated;
GRANT ALL ON configuracoes_id_seq TO authenticated;
